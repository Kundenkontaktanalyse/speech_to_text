import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.BufferedInputStream;
import java.util.Properties;

/*
 * This Java source file was generated by the Gradle 'init' task.
 */


/*
 * XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
 * X Ablauf beim Auswählen:   1. ffmpeg.exe														X
 * X						  2. JsonInput 														X	
 * X						  3. Callcenter-Spur												X
 * X						  4. Kunden-Spur													X
 * X																							X
 * XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
 */

	// Klasse zum Verwalten der Files im Verzeichnis und Aufrufen der Übersetzung ermittelter Json-Agent-Kunde Tripels

public class SpeechToText extends AudioProcessing {
	
	// Pfad zum Verzeichnis der zu transkibierenden Dateien
	String VerzeichnisPfad = "C:\\Users\\Daniel\\Desktop\\s2t";
	
	File VerzeichnisOrdner = new File(VerzeichnisPfad);
	
		
	
	
	public void invokeTranslation(String idName, String outputDestination, File jsonInput, File caInput, File kunInput, File ffmpegFile ) throws IOException{
		
		System.out.println("invokeTranslation");
		
		Properties properties = new Properties();
		BufferedInputStream stream = new BufferedInputStream(new FileInputStream("s2tProperties.properties"));
		properties.load(stream);
		stream.close();
		

//		FileChooser myChooser = new FileChooser();

		// Ort der ffmpegEXE und der beiden Audio Channels
		String jsonInputPath=jsonInput.toString();
		String ffmpegExeOrdner = ffmpegFile.getParent();

		// myChooser.choose();
// ----------------------------------------------------------------

		 manageJavaInput MyManage = new manageJavaInput();
		 MyManage.manage(ffmpegExeOrdner, caInput, kunInput);

// ----------------------------------------------------------------

		SpeakerSeperation spsep = new SpeakerSeperation(ffmpegFile);
		spsep.processFiles(ffmpegExeOrdner);
//		spsep.initalizeData();
		
		bundler.setAudioLength(spsep.audioLength);
		bundler.generiereJSON(idName, outputDestination, jsonInputPath);
//		bundler.speichereDialoginTXT(ffmpegExeOrdner);

		
	}
}